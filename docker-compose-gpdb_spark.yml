version: "3"
services:
  master:
      image: gettyimages/spark:2.2.0-hadoop-2.7
      command: bin/spark-class org.apache.spark.deploy.master.Master -h master
      hostname: spark-master.example.com
      container_name: spark-master # predefined name, instead of auto-generated by docker-compose
      env_file: kerberos.env
      environment:
        MASTER: spark://master:7077
        SPARK_CONF_DIR: /conf
        SPARK_PUBLIC_DNS: localhost
      expose:
        - 7001
        - 7002
        - 7003
        - 7004
        - 7005
        - 7006
        - 7077
        - 6066
      ports:
        - 4040:4040
        - 6066:6066
        - 7077:7077
        - 8080:8080
      volumes:
        - ./spark/conf/master:/conf
        - ./spark/data:/tmp/data
        - .:/code
  worker:
      image: gettyimages/spark:2.2.0-hadoop-2.7
      command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077
      hostname: spark-worker.example.com
      container_name: spark-worker # predefined name, instead of auto-generated by docker-compose
      env_file: kerberos.env
      environment:
        SPARK_CONF_DIR: /conf
        SPARK_WORKER_CORES: 2
        SPARK_WORKER_MEMORY: 1g
        SPARK_WORKER_PORT: 8881
        SPARK_WORKER_WEBUI_PORT: 8081
        SPARK_PUBLIC_DNS: localhost
      links:
        - master
      expose:
        - 7012
        - 7013
        - 7014
        - 7015
        - 7016
        - 8881
      ports:
        - 8081:8081
      volumes:
        - ./spark/conf/worker:/conf
        - ./spark/data:/tmp/data
  # This service MUST have the name "kdc-kadmin" otherwise every kerberos client won't be able to talk with the KDC.
  # If you would like to change the name edit the file configureKerberosClient.sh and change the configurations
  # "kdc" and "admin_server" in the /etc/krb5.conf section.

  kdc-kadmin:
    build: ./kdc-kadmin
    hostname: kdc-kadmin.example.com
    container_name: kdc-kadmin # predefined name, instead of auto-generated by docker-compose
    env_file: kerberos.env
    volumes:
      # This is needed otherwise there won't be enough entropy to generate a new kerberos realm
      - /dev/urandom:/dev/random
      - .:/code   # shared folder
  kerberos-client:
    hostname: kerberos-client.example.com
    container_name: kerberos-client
    build: ./kerberos-client
    env_file: kerberos.env
    depends_on:
      - kdc-kadmin
    links:
        - kdc-kadmin:kdc-kadmin.example.com
    volumes:
      - .:/code # shared folder
  gpdb5:
      build:
          context: .
          dockerfile: ./gpdb/Dockerfile
      #command: bin/bash #./kerberos-client/configureKerberosClient.sh
      hostname: "gpdbsne.example.com"
      container_name: gpdbsne
      env_file: kerberos.env
      ports:
         - "5432:5432"
         - "5005:5005"
         - "5010:5010"
         - "9022:22"
         - "40000:40000"
         - "40001:40001"
         - "40002:40002"
      expose:
         - "5432"
      volumes:
         - .:/code
      links:
        - kdc-kadmin:kdc-kadmin.example.com
      tty: true

# NOTE:
#  "env_file: kerberos.env" is optional.
#  In case no .env file is supplied, nor any environment variable is set, the following values will be used:
#   REALM=EXAMPLE.COM
#   SUPPORTED_ENCRYPTION_TYPES=aes256-cts-hmac-sha1-96:normal
#   KADMIN_PRINCIPAL=kadmin/admin
#   KADMIN_PASSWORD=MITiys4K5
